<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Slb.ToolScope.Framework.UITier.Tasks</name>
    </assembly>
    <members>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx"/> of executing Recorded Data Analysis
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx">
            <summary>
            New TssAnalysisStep implementation which has StartDumpFileReportingRule logic implemented.
            Don't need to configure the "StartDumpFileReportingRule" business rule, if using this new step.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep">
            <summary>
            Represents a base class for TSS work steps.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep">
            <summary>
            Base class for worksteps that require access to a tool
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.ToolContextMgr">
            <summary>
            Gets or sets the tool context manager
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.RunCancelableBackgroundProcessHelper">
            <summary>
            A helper implementation which helps starting a background process under a Task object.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.RunCancelableBackgroundProcessHelper.#ctor(Slb.ToolScope.Framework.LogicTier.IAsync,System.Boolean,System.Boolean,Slb.ToolScope.Framework.UITier.Task,System.String)">
            <summary>
            Create an help object to help starting the cancelable background process.
            </summary>
            <param name="backgroundProcess">IAsync object which supports BackgroundWorker interface</param>
            <param name="abortable">status form is abortable or not</param>
            <param name="silenceMode">run background process without any popup message box</param>/// 
            <param name="ownerTask">Task object which owns this background process</param>
            <param name="processDescription">Background process description which is displayed as the title of the status form.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.RunCancelableBackgroundProcessHelper.StartBackgroundProcess">
            <summary>
            Start Background process.
            </summary>
            <returns>result of the processing</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.RunCancelableBackgroundProcessHelper.StartCancelableBackgroundProcess(Slb.ToolScope.Framework.LogicTier.IAsync,System.Boolean,System.Boolean,Slb.ToolScope.Framework.UITier.Task,System.String)">
            <summary>
            A static method which help starting the background process without creating an instance of RunCancelableBackgroundProcessHelper.
            </summary>
            <param name="backgroundProcess">IAsync object which supports BackgroundWorker interface</param>
            <param name="abortable">status form is abortable or not</param>
            <param name="silenceMode">run background process without any popup message box</param>/// 
            <param name="ownerTask">Task object which owns this background process</param>
            <param name="processDescription">Background process description which is displayed as the title of the status form.</param>
            <returns>result of the processing</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep.RunCancelableBackgroundProcessHelper.BackgroundWorker">
            <summary>
            Retrieve BackgroundWorker object in the StatusForm
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ProcessTreeViewRelatedLogic">
            <summary>
            Run TreeView related logic, for example, create report/demp file tree nodes.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Start">
            <summary>
            Override the base Start() to implement logic to display the instruction window automatically.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AbortTask">
            <summary>
            Requests to abort the TSS workflow.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.IsTaskFormStoppable">
            <summary>
            Gets whether the Task's form is stoppable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ResolveWorkStepMenuSetting(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep)">
            <summary>
            Resolves the menu setting for the workstep.
            </summary>
            <param name="tssWorkStep"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AddTopDownDependency(Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType,Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType,Slb.ToolScope.Framework.Data.TaskState[],Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Adds the Topdown TSS dependency.
            </summary>
            <param name="currentStepDefinition"></param>
            <param name="dependStepDefinition"></param>
            <param name="dependTaskStates"></param>
            <param name="acquireType"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AddPrerequisiteDependency(Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType,Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType,Slb.ToolScope.Framework.Data.TaskState[],Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Adds the prerequisite dependency.
            </summary>
            <param name="currentStepDefinition"></param>
            <param name="dependStepDefinition"></param>
            <param name="dependTaskStates"></param>
            <param name="acquireType"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.IsTssTestCompleted">
            <summary>
            Gets whether the TSS test completed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.EnableTopDownDependency(System.Boolean)">
            <summary>
            Enables or disables the Topdown TSS dependency.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">if set to <c>true</c> Dispose called from user code.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Show(System.Windows.Forms.Form)">
            <summary>
            Shows the form.
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AssignTaskState(Slb.ToolScope.Framework.Data.TaskState)">
            <summary>
            Sets task state.
            </summary>
            <param name="taskState"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetWindowType(Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepType)">
            <summary>
            Generic logic to use UI configuration to retrieve the window type.
            </summary>
            <param name="stepDefinition"></param>
            <returns>Type of the window</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetWindowType(System.String)">
            <summary>
            Generic logic to use UI configuration to retrieve the window type.
            </summary>
            <param name="windowImplementation"></param>
            <returns>Type of the window</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetWindowType(Slb.ToolScope.Framework.Data.TestXmlSchema.DialogTypeEnum)">
            <summary>
            Generic logic to use UI configuration to retrieve the window type.
            </summary>
            <param name="windowType"></param>
            <returns>Type of the window</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetWindowInstance(Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepType)">
            <summary>
            Generic logic to use UI configuration to launch the window.
            </summary>
            <param name="stepDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetTssWindowConfig(Slb.ToolScope.Framework.Data.TestXmlSchema.DialogTypeEnum,Slb.ToolScope.Framework.Data.TestXmlSchema.TssDisplayConfigType)">
            <summary>
            Gets the current window configuration data by the dialog type.
            </summary>
            <param name="dlgType"></param>
            <param name="tssDisplayConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetCustomTssWindowConfig(System.String)">
            <summary>
            Gets the "custom" window configuration data by its name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetWindowConfig(System.String)">
            <summary>
            Gets UI window configuration by its name.
            </summary>
            <param name="referenceName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetServiceName">
            <summary>
            Gets the service name by definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetServiceDefinition">
            <summary>
            Gets the <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.BusinessLogicServiceType"/> used by this workstep
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.CreateServiceObject(Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType)">
            <summary>
            TssWorkStep can use this method to recreate the service object.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.CreateReportServiceObject(System.String)">
            <summary>
            TssWorkStep can use this method to recreate the service object.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.CreateBusinessServiceObject(System.String)">
            <summary>
            TssWorkStep can use this method to recreate the service object.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.OnContinue">
            <summary>
            Starts this work step
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AssignTssWorkStepState(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep,Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepBaseType)">
            <summary>
            David Chiang, 7/10/2009
            This function reads the TSS TestState from the TSS Run XML and assign the state to Task.
            Thus, the tree node will reflect the correct state after read the saved TSS Run Xml back.
            </summary>
            <param name="workStep"></param>
            <param name="tssRunObject"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.CreateDummyServiceObject(System.Type)">
            <summary>
            David Chiang 10/19/2009, Make CreateServiceObject() as protected. TssWorkStep can use this method to recreate the service object.
            This function is used by the framework to create a "dummy" default data object. 
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.OnWorkStepStarted(System.Object,System.EventArgs)">
            <summary>
            Handles the work step started event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.GetDefaultConnection(Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestsCollection)">
            <summary>
            Gets the default Tss connection.
            </summary>
            <param name="tssTestsCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.OnWorkStepEnded(System.Object,System.EventArgs)">
            <summary>
            Final check on State when ending the step
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.SetTssWorkStepState(Slb.ToolScope.Framework.LogicTier.RuleExecutingStatus)">
            <summary>
            Evaluate service rule execution status and assign correct state to current work step.
            </summary>
            <param name="status"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ConnectionChangeHistory">
            <summary>
            Gets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ConnectionChangeHistory"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.AssociatedTreeNode">
            <summary>
            TssWorkStep associated TreeNode.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TssWorkStepDefinition">
            <summary>
            Get the <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssWorkStepType"/> that defines this workstep
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ServiceObject">
            <summary>
            Data object used by TssWorkStep.
            This can be a ReportService, a ToolDataService, or a BusinessService
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Service">
            <summary>
            The <see cref="T:Slb.ToolScope.Framework.LogicTier.Core.IService"/> used to perform processing
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TaskRunContext">
            <summary>
            Context information for the TssWorkStep.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.ToolContextMgr">
            <summary>
            Gets or sets an instance of <see cref="T:Slb.ToolScope.Framework.LogicTier.ToolContextManager"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TssWorkflowAdapter">
            <summary>
            Current Step's TssWorkflowAdapter. If null, then doesn't have any TssWorkflowAdapter.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TssProject">
            <summary>
            Gets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TssProject"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Form">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Form"/> to display the workflow.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.Aborting">
            <summary>
            Gets whether the TSS workflow is aborting.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep.TssRunObject">
            <summary>
            Data object created from TSS test definition.
            Updated with process data as performed.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.IViewAnalysis">
            <summary>
            Interface which launches the Screen to view the analysis result.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.IViewAnalysis.ViewAnalysisResult">
            <summary>
            Launch the screen to view the analysis result.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.IViewAnalysis.DisplayResultAutomatically">
            <summary>
            flag to tell if need to display the analysis result automatically
            </summary>
            <returns></returns>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.m_worker">
            <summary>
            background worker thread
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ViewAnalysisResult">
            <summary>
            View analysis result.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.MarkStepRunnable(System.Collections.Generic.List{Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep})">
            <summary>
            Mark TssRunObject as runnable so it will be run next time
            </summary>
            <param name="analysisStepExecOrder"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetServiceDefinedInViewAnalysisResult">
            <summary>
            Creates an instance of Tss Analysis business service 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.InitializeProcess">
            <summary>
            Initializes the analysis process
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ProcessData">
            <summary>
            Analyzes and processes the dump files
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ProcessDumpFile">
            <summary>
            Combined the process status of each dump file together.
            Override this method to have customized behaviors.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.CombineAllDumpFileRuleProcessStatus(System.Collections.Generic.Dictionary{System.String,Slb.ToolScope.Framework.LogicTier.RuleExecutingStatus})">
            <summary>
            Analyze dump files.
            This method will loop through the dump files and process them with their corresponding zone definitions.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ProcessEachDumpFile(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData)">
            <summary>
            Logic to process each dump file stored in DumpFileProcessDataList.
            Override this method if the dump file needs to be ignored, or require the new logic.
            </summary>
            <param name="dumpfileProcessData"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.InitializeDumpFileDataService(Slb.ToolScope.Framework.LogicTier.BusinessService.BusinessServiceBase,Slb.ToolScope.Framework.LogicTier.BusinessService.BusinessServiceBase,Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneDefinitionType,System.String)">
            <summary>
            Initialize the corresponding buisness service and data service.
            In order to process different dump files (because potentially, multiple dump files can be processed in one step), a new service instance is requested and created.
            This method tries to replicate the data from existing "step" service to the new "cloned" service.
            If service requries any "extra" properties to be set, then override this method to assign them.
            </summary>
            <param name="clonedService"></param>
            <param name="zoneDef"></param>
            <param name="dumpFilePath"></param>
            <param name="stepService" />
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetTestZoneDumpFiles(Slb.ToolScope.Framework.Data.TestXmlSchema.AnalysisFlowType)">
            <summary>
            Gets the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/>s for an analysis step
            </summary>
            <param name="stepDef">The <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.AnalysisFlowType"/> defining the analysis step</param>
            <returns>An enumeration of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetTestZoneDumpFiles(Slb.ToolScope.Framework.Data.TestXmlSchema.TssZoneAnalysisStepType)">
            <summary>
            Gets the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/>s for an analysis step
            </summary>
            <param name="stepDef">The <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssZoneAnalysisStepType"/> defining the analysis step</param>
            <returns>An enumeration of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetTestZoneDumpFiles(Slb.ToolScope.Framework.Data.TestXmlSchema.ToolMemoryPartitionAnalysisStepType)">
            <summary>
            Gets the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/>s for an analysis step
            </summary>
            <param name="stepDef">The <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ToolMemoryPartitionAnalysisStepType"/> defining the analysis step</param>
            <returns>An enumeration of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetWindowType(Slb.ToolScope.Framework.Data.TestXmlSchema.TssDisplayConfigType)">
            <summary>
            Gets analysis form implementation.
            </summary>
            <param name="displayConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.GetDumpFileInformation(Slb.ToolScope.Framework.Data.TestXmlSchema.TssAnalysisStepBaseType,System.Collections.Generic.List{System.String}@,Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            This is used in ViewAnalysisResult().
            </summary>
            <param name="definition">TSS analysis step definition</param>
            <param name="analysisDataInfo">dump file related information</param>
            <param name="tssZones">zone collection</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ProjectCloseAction(System.Object,Slb.ToolScope.Framework.Data.TssProject.ProjectCloseEventArgs)">
            <summary>
            Closes Tss Analysis form
            </summary>
            <param name="source"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.BeginAsync(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Runs the data object (using a BackgroundWorker's thread)
            </summary>
            <param name="backgroundWorker">The BackgroundWorker controlling the background thread</param>
            <param name="doWorkEventArgs">Arguments used in running the data object</param>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.ViewAnalysisFormServiceCompleted">
            <summary>
            Event which will be triggered when the "View Analysis Result Form" is closed.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessDataList">
            <summary>
            the list of zone definitions corresponding to dump files.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.RunUnderBackGroundWroker">
            <summary>
            Gets or sets whether processing under a background worker
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.TssAnalysisForm">
            <summary>
            Gets or sets a TSS Analysis form
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DisplayResultAutomatically">
            <summary>
            Gets whether displaying result automatically
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData">
            <summary>
            Contains the dump file path and an instance of <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneDefinitionType"/> 
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData.#ctor(Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneDefinitionType,System.String)">
            <summary>
            Initializes the new instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData"/>
            </summary>
            <param name="zoneDef"></param>
            <param name="correspondingDumpFile"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData.ZoneDefinition">
            <summary>
            Get an instance of <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneDefinitionType"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStepEx.DumpFileProcessData.DumpfilePath">
            <summary>
            Get the dump file path 
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.UiSelectDumpFile">
            <summary>
            Gets or sets a customized method
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.InitializeProcess">
            <summary>
            Initialize the process
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.AssignDumpFileToZones(Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            Assign the selected dump files to the zones. Zones are defined in <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> class.
            </summary>
            <param name="zoneCollection">Zones collection <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType"/></param>
            <returns><see cref="T:Slb.ToolScope.Framework.Data.TaskState"/> If processing is ok, return TaskState.Completed.</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.AssignDumpFileToZones(System.String[],Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            Assign the selected dump files to the zones. Zones are defined in <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> class.
            By default, framework only consider only one dumpfile for one single zone.
            Override this method to change this behavior.
            </summary>
            <param name="selectedDummpFiles"></param>
            <param name="zoneCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.OpenDumpFile(System.String)">
            <summary>
            Open dump files
            </summary>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.UpdateZonesBeforeAssignDumpFile(Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            Initialize the zones defined in <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> object before assign dump files to zones.
            This method can be used to add, update, and delete the preconfigured zones defined in <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> object.
            </summary>
            <param name="zoneCollection">Zones collection <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType"/></param>
            <returns><see cref="T:Slb.ToolScope.Framework.Data.TaskState"/> If processing is ok, return TaskState.Completed.</returns>        
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenDumpAnalysisStep.UpdateZonesAfterAssignDumpFile(Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            Initialize the zones defined in <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> object before assign dump files to zones.
            This method can be used to update the zones after dumpfiles are assigned.
            </summary>
            <param name="zoneCollection">Zones collection <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType"/></param>
            <returns><see cref="T:Slb.ToolScope.Framework.Data.TaskState"/> If processing is ok, return TaskState.Completed.</returns>        
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssEditPropertyStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying TssPropertyEditor form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssEditPropertyStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssEditPropertyStep"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssEditPropertyStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase">
            <summary>
            Represents the base class for Tss dump work steps
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase.GetDefaultTssDumpFileName(Slb.ToolScope.Framework.Data.TestXmlSchema.DumpStepType)">
            <summary>
            Gets the default Tss dump file name
            </summary>
            <param name="dumpStepDef"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase.GetTssDumpFileName(Slb.ToolScope.Framework.Data.TestXmlSchema.DumpStepType)">
            <summary>
            Gets the Tss dump file name
            </summary>
            <param name="dumpStepDef"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStepBase.GetDefaultConnection(Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestsCollection)">
            <summary>
            Gets the default Tss connection.
            </summary>
            <param name="tssTestsCollection"></param>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TssNewProjectMenuItem">
            <summary>
            New TSS Project menu item implementation.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem">
            <summary>
            TSS Project menu item base implementation
            This TSS Project menu item has knowledge about the current TSS Project selected in the Workflow tree.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem">
            <summary>
            Represents the base class for <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem"/>.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem"/> class.
            </summary>
            <param name="text">menu name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem.#ctor(System.String,Slb.ToolScope.Framework.UITier.Task,Slb.ToolScope.Framework.UITier.ToolScopeMenuAccess,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem"/> class.
            </summary>
            <param name="text"></param>
            <param name="task"></param>
            <param name="access"></param>
            <param name="treeController"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TssMenuItem.WorkFlowTreeController">
            <summary>
            Gets or sets an instance of WorkFlowTreeController.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem"/> class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem.#ctor(System.String,Slb.ToolScope.Framework.UITier.Task,Slb.ToolScope.Framework.UITier.ToolScopeMenuAccess,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            The special constructor which has the WorkFlowTreeController passed in information
            </summary>
            <param name="text"></param>
            <param name="task"></param>
            <param name="access"></param>
            <param name="treeController"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem.OnClick(Slb.ToolScope.Framework.UITier.Task)">
            <summary>
            Handles OnClick event.
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssProjectMenuItem.AddDependency(System.String,System.Object[],Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            TSS Project dependency implementation
            </summary>
            <param name="name"></param>
            <param name="parameters"></param>
            <param name="acquireType"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssNewProjectMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssNewProjectMenuItem"/> class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssNewProjectMenuItem.#ctor(System.String,Slb.ToolScope.Framework.UITier.Task,Slb.ToolScope.Framework.UITier.ToolScopeMenuAccess,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssNewProjectMenuItem"/> class.
            </summary>
            <param name="text"></param>
            <param name="task"></param>
            <param name="access"></param>
            <param name="treeController"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TssOpenProjectMenuItem">
            <summary>
            Open TSS Project menu item implementation.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssOpenProjectMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssOpenProjectMenuItem"/> class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TssOpenProjectMenuItem.#ctor(System.String,Slb.ToolScope.Framework.UITier.Task,Slb.ToolScope.Framework.UITier.ToolScopeMenuAccess,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TssOpenProjectMenuItem"/> class.
            </summary>
            <param name="text"></param>
            <param name="task"></param>
            <param name="access"></param>
            <param name="treeController"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode">
            <summary>
            The tree node holds the Tss test
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase">
            <summary>
            Base class for other TssTreeNode
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode">
            <summary>
            <see cref="T:System.Windows.Forms.TreeNode"/> that displays and allows control of a <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.#ctor(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/>
            </summary>
            <param name="workstep"><see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/> to be displayed by this <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Refresh">
            <summary>
            Refreshes the Enabled flag for the node and its children
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Run">
            <summary>
            Run the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Cancel">
            <summary>
            Cancel the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Skip">
            <summary>
            Skip the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Save">
            <summary>
            Save the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Load">
            <summary>
            Load the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.CleanFileSubNodes">
            <summary>
            Method to clean sub tree nodes.
            Try not to use it normally. Currently, it is only used to process the special nodes like file/report nodes.
            It should not used to process task, step or flow nodes.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.CreateHistoryProjSubNodes(System.Collections.Generic.List{Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType.HistoryProject})">
            <summary>
            Method to allow create history project/test nodes. 
            Try not to use it normally. Currently, it is only used to create the special history nodes.
            It should not used to create task, step or flow nodes.
            </summary>
            <param name="historyProjects">the list of history projects</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.CreateFileSubNodes(System.Collections.Generic.List{System.String})">
            <summary>
            Method to allow create dynamic nodes.
            This method will delete all child nodes first. 
            Try not to use it normally. Currently, it is only used to create the special nodes like file/report nodes.
            It should not used to create task, step or flow nodes.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.ApplendFileSubNodes(System.Collections.Generic.List{System.String})">
            <summary>
            Method to allow append dynamic nodes.
            This method will not delete any child nodes. 
            Try not to use it normally. Currently, it is only used to append the special nodes like file/report nodes.
            It should not used to append task, step or flow nodes.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStepStateChanged(System.Object,Slb.ToolScope.Framework.UITier.StateChangedEventArgs)">
            <summary>
            Update node image when the workstep's state changes
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.SetImageKey(System.String)">
            <summary>
            Sets the image for the node
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Slb.ToolScope.Framework.UITier.IEnableDisable"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.StateChanged">
            <summary>
            Event that the state has changed
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.IsActive">
            <summary>
            Whether the node (or any of its children nodes) are active
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep">
            <summary>
            Gets <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode.WorkStep"/> displayed by this <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.#ctor(Slb.ToolScope.Framework.UITier.WorkStep,Slb.ToolScope.Framework.Data.TssProject)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase"/> class.
            </summary>
            <param name="workstep"></param>
            <param name="tssProject"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.#ctor(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase"/> class.
            </summary>
            <param name="workstep"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.AutoRun(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Executes auto run
            </summary>
            <param name="node"></param>
            <returns>
                <c>true</c> if it is the case of TssProject; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.ViewProjectReports">
            <summary>
            Executes TssReportStep
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.ViewReports(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Views all the reports
            </summary>
            <param name="treeNode"></param>
            <param name="generateReport"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.CanViewReports(System.Windows.Forms.TreeNode)">
            <summary>
            Views the treeNode's report
            </summary>
            <param name="treeNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.CanViewProjectReports">
            <summary>
            Returns whether can view reports
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase.TssProject">
            <summary>
            Gets or sets the associated TssProject instance
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode.#ctor(Slb.ToolScope.Framework.UITier.WorkStep,Slb.ToolScope.Framework.Data.TssProject)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode"/> class.
            </summary>
            <param name="workstep"></param>
            <param name="tssProject"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode.StartNewTssTest">
            <summary>
            Starts a new Tss test
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode.TssTestObject">
            <summary>
            Gets the instance of <see cref="T:Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType"/> 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityRootNode">
            <summary>
            The TssActivity root node. 
            This root node has the reference to the TssActivity object used in this tree.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityRootNode.#ctor(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Default constructor
            </summary>
            <param name="workstep"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityRootNode.CreateTssActivityTree(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.Data.TssActivity,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Creates a sub tree that contains the TSS Activity work flow.
            The sub tree root node is TssActivityRootNode.
            </summary>
            <param name="parentNode"></param>
            <param name="tssActivity"></param>
            <param name="activityFlow"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityRootNode.RefreshHistoryNode">
            <summary>
            Refreshes TSS history work flow.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityRootNode.TssActivity">
            <summary>
            Gets the associated TssProject instance
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask">
            <summary>
            Base class for tasks that require access to a tool
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/>
            </summary>
            <param name="name">Name of the task</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask.#ctor(System.String,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/>
            </summary>
            <param name="name">Name of the task</param>
            <param name="toolContextMgr"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask.ToolContextMgr">
            <summary>
            Gets or sets the tool context manager
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.GarbageCollectionTask">
            <summary>
            Task to ensure garbage collection is performed
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.GarbageCollectionTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.GarbageCollectionTask"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.GarbageCollectionTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep"/> of loading firmware.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.CreateLoaderForm(Slb.ToolScope.Framework.Data.ToolContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.FirmwareLoaderForm">
            <summary>
            Gets an instance of the <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.FirmwareLoaderTask.FirmwareLoaderForm"/>
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ViewCalibrationFileTask">
            <summary>
            View Calibration File work step.
            This work step views the calibration file saved in the disk.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ViewCalibrationFileTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ViewCalibrationFileTask.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns><c>true</c> if the workstep can continue; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep">
            <summary>
            Verify Calibration Record work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.VerifyCalibrationRecordWorkStep.GetCalibrationViewerForm">
            <summary>
            Gets the tool initialization form
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.UpgradeDumpFormatTask">
            <summary>
            Task to convert dump files between formats
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.UpgradeDumpFormatTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.AboutFormTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.UpgradeDumpFormatTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflowAdapter">
            <summary>
            This class adapts a regular TSS Work Step to have the Work Flow characteristics, for example, have children steps, and is also executable.
            NOTE: it is not a public class, and is only used internally by the framework to wrap the regular TssWorkStep.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> for TSS Project.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow">
            <summary>
            Workflow base class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.#ctor(System.String,System.Collections.Generic.IEnumerable{Slb.ToolScope.Framework.UITier.WorkStep},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> class.
            </summary>
            <param name="name"></param>
            <param name="workSteps"></param>
            <param name="selectableSteps"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.#ctor(System.String,System.Collections.Generic.IEnumerable{Slb.ToolScope.Framework.UITier.WorkStep})">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> class.
            </summary>
            <param name="name"></param>
            <param name="workSteps"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> instance.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> instance.
            </summary>
            <param name="name">Workflow name</param>
            <param name="selectableSteps">Are work steps user selectable?</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Finalize">
            <summary>
            Finalizes the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Initialize">
            <summary>
            Initializes this workstep.
            </summary>
            <remarks>Calls CreateWorkSteps if first time called</remarks>
            <returns>true if the initialization was succesful; otherwise, false</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.FindWorkStep(System.String)">
            <summary>
            Finds the work step by name.
            </summary>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Execute">
            <summary>
            Runs the workflow.
            </summary>
            <remarks>Connects to first workstep Ended event, then runs it</remarks>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.WorkStepEnded(System.Object,System.EventArgs)">
            <summary>
            Keeps workflow running after a child workstep ends.
            </summary>
            <remarks>
            Disconnects from workstep ended, finds next workstep to run, 
            connects to its Ended event, then runs it.
            When no more worksteps to run, releases dependencies (ends workflow).
            </remarks>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">if set to <c>true</c> Dispose called from user code.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.GetImage(System.String)">
            <summary>
            Gets the image with the specified name from the workstep's ResourceManager
            </summary>
            <param name="imageName">Name of the image.</param>
            <returns>Image with the specified image name.</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.CreateWorkSteps">
            <summary>
            Creates the work steps for this workstep.
            </summary>
            <returns>true if succesful; otherwise, false</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.FindWorkStep(System.String,Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Finds the work step by name.
            </summary>
            <param name="stepName"></param>
            <param name="workStep"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Workflow.WorkStepsStateChanged(System.Object,Slb.ToolScope.Framework.UITier.StateChangedEventArgs)">
            <summary>
            When any child workstep changes state, workflow state changes
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.WorkSteps">
            <summary>
            Gets the <see cref="T:Slb.ToolScope.Framework.UITier.WorkStepCollection"/> that makes up the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/>/&gt;
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.ParentForm">
            <summary>
            Gets the parent form.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.ToolContextMgr">
            <summary>
            Gets the instance of <see cref="T:Slb.ToolScope.Framework.LogicTier.ToolContextManager"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.Image">
            <summary>
            Gets the image describing the workstep.
            </summary>
            <remarks>
            This typically will call GetImage with the desired image name
            </remarks>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.SelectableSteps">
            <summary>
            Gets a boolean value indicating whether steps are user selectable.
            </summary>
            <value>
            	<c>true</c> if steps are user selectable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Workflow.ResourceManager">
            <summary>
            Gets or sets the resource manager containing images for the workflow.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow.TaskStartDelegate">
            <summary>
            Delegate to start task.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.CreateWorkflows(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Creates the list of TSS Workflows according to a TssProject definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.CreateActivity(Slb.ToolScope.Framework.Data.TssActivity,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Creates a list of TSS Activities according to a TssProject definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.CreateAdvancedActivity(Slb.ToolScope.Framework.Data.TssActivity,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Creates a list of TSS Advanced Activities according to a TssProject definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.RebuildTestWorkflow(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.LogicTier.ToolContextManager,System.String)">
            <summary>
            Re-builds the Test Workflow.
            </summary>
            <param name="tssProject"></param>
            <param name="contextMgr"></param>
            <param name="testName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.CreateWorkflow(Slb.ToolScope.Framework.LogicTier.ToolContextManager,Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType)">
            <summary>
            Creates a work flow with name from TssTestDefinition.Name.
            </summary>
            <param name="contextMgr"></param>
            <param name="testDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.FindTssWorkStep(System.String)">
            <summary>
            Find a particular work step (task) implementation in TssWorkFlow.
            </summary>
            <param name="stepName">name of work step</param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.IsTssWorkflowCompleted(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow)">
            <summary>
            Gets whether the TSS workflow is completed.
            </summary>
            <param name="tssWorkflow"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.Start">
            <summary>
            Starts the workflow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.CreateWorkSteps">
            <summary>
            Creates work steps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">if set to <c>true</c> Dispose called from user code.</param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.Image">
            <summary>
            Gets the work flow icon.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow.HtmlInstructionUri">
            <summary>
            Gets the URI for the instructions for the workflow (or active workstep).
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflowAdapter.#ctor(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep)">
            <summary>
            Standard workflow adpater constructor.
            </summary>
            <param name="internalStep">the workflow adapter contained workstep implementation</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflowAdapter.Start">
            <summary>
            Modified start() logic. The new start() will also call the start() defined in the contained work step.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflowAdapter.Dispose(System.Boolean)">
            <summary>
            New dispose logic. The new logic will also dispose the contained work step.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflowAdapter.InternalWorkStep">
            <summary>
            The internal work step implementation contained inside the Workflow adapter.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving and removing a Tss project.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.OnDependencyChanged(System.Object,System.EventArgs)">
            <summary>
            Handles dependency changed events.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssProject"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssRemoveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssRemoveProjectTask"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssConfirmSaveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask.TssConfirmSaveProjectTask"/> 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsTask">
            <summary>
            Test communications task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificAttribute">
            <summary>
            Tool specific attribute.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.WorkflowType">
            <summary>
            Specifies the work flow type mode for menu items.
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.WorkflowType.BasicActivity">
            <summary>
            BasicActivity
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.WorkflowType.TSSTest">
            <summary>
            TSSTest
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.WorkflowType.Calibration">
            <summary>
            Calibration
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific">
            <summary>
            Tool specific initialization interface
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.LoadConfigurationFiles">
            <summary>
            Load tool specific configuration files
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.InitializeMenu(Slb.ToolScope.Framework.UITier.ToolScopeMenu)">
            <summary>
            Initializes the menu with tool specific menu items
            </summary>
            <param name="toolScopeMenu">The ToolScope menu.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.InitializeWorkflows(Slb.ToolScope.Framework.UITier.Tasks.WorkflowType,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Initializes a workstep collection with tool-specific workflows
            </summary>
            <param name="type">The type of workflows to update with</param>
            <param name="workflows">The workstep collection to update</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.ConfigureActivity(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Sets Activity specific parameters
            </summary>
            <param name="flow">Work flow</param>
            <param name="collection">Parameters to be used Toolspecific Activity</param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.ParentForm">
            <summary>
            Gets or sets the parent form for UI elements
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific.ToolContextMgr">
            <summary>
            Gets or sets the manager for determining how to access the tool
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.LWDRunCalibrationWorkStep">
            <summary>
            Edit Master Calibration
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LWDRunCalibrationWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LWDRunCalibrationWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.StoreCalibrationWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for tool initialization
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.StoreCalibrationWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.StoreCalibrationWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.StoreCalibrationWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.StoreCalibrationWorkStep.GetWorkStepForm">
            <summary>
            Gets the tool initialization form
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of opening a project, and saving and removing the old one.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.OpenProject">
            <summary>
            Open a Tss Project.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssProject"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssConfirmSaveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssConfirmSaveProjectTask"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssRemoveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssOpenProjectTask.TssRemoveProjectTask"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeRootNode">
            <summary>
            The TSS History sub tree root node.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeRootNode.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Default constructor.
            </summary>
            <param name="dirInfo">the directory information corresponding to the history root node</param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeRootNode.HistoryFolder">
            <summary>
            The directory information corresponding to the history root node.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.SelfTestTask">
            <summary>
            Self Diagnostics task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SelfTestTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.SelfTestTask"/> class.
            </summary>
            <param name="name">Task name.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SelfTestTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MenuConfiguredWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssBaseConfiguredFormWorkStep"/> for menu configuration
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssBaseConfiguredFormWorkStep">
            <summary>
             Represents the base class for <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MenuConfiguredWorkStep"/>.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssBaseConfiguredFormWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssBaseConfiguredFormWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssBaseConfiguredFormWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MenuConfiguredWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MenuConfiguredWorkStep"></see> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.JobInfoWorkStep">
            <summary>
            Job information work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.JobInfoWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.JobInfoWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.JobInfoWorkStep.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns><c>true</c> if the workstep can continue; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for tool initialization
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkStep.GetInitializationForm">
            <summary>
            Gets the tool initialization form
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.CalibrationWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for tool initialization
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.CalibrationWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.CalibrationWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.CalibrationWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.CalibrationWorkStep.GetCalibrationEditorForm">
            <summary>
            Gets the tool initialization form
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving a modified project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveModifiedProjectTask.TssProject"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependencyFactory">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.TaskDependencyFactory"/> of creating a new Tss Task Dependency.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependencyFactory.#ctor">
            <summary>
            Adds <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependencyFactory"/> to DependencyFactory.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependencyFactory.Create(System.Object[])">
            <summary>
            Creats a new Tss Task Dependency.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependencyFactory.Name">
            <summary>
            Gets Tss task name.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency">
            <summary>
            A dependency class for evaluating the state of another task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency.#ctor(Slb.ToolScope.Framework.UITier.Task,System.Collections.Generic.IEnumerable{Slb.ToolScope.Framework.Data.TaskState},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency"/> class.
            </summary>
            <param name="task"></param>
            <param name="taskStates"></param>
            <param name="comment"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency.CanAcquire(System.Object,Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Gets whether can be acquired.
            </summary>
            <param name="acquirer"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency.Name">
            <summary>
            Gets Tss task name.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTaskDependency.Enable">
            <summary>
            Specifies whether enable or disable.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of restarting a work flow.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.#ctor(System.String,Slb.ToolScope.Framework.Data.TssProject,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask"/> class.
            </summary>
            <param name="name"></param>
            <param name="tssProject"></param>
            <param name="testName"></param>
            <param name="stepName"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.UserAcknowledgement(Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType,System.String@,System.String@)">
            <summary>
            Displays and askes user comments input.
            </summary>
            <param name="tssTestObjectDefinition"></param>
            <param name="historyDescription"></param>
            <param name="historyComment"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.AskUserDescriptionComment(System.String@,System.String@)">
            <summary>
            Displays Tss History Project comment form.
            </summary>
            <param name="historyDescription"></param>
            <param name="historyComment"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.DisplayRestartWarningMessage">
            <summary>
            Displays Restart warning message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.GetUserDependencyMessage(System.String@,System.String[][]@)">
            <summary>
            Gets the user dependency messages.
            </summary>
            <param name="title"></param>
            <param name="detailMessages"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.TssProject"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.TestName">
            <summary>
            Gets or sets the test name.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask.StepName">
            <summary>
            Gets or sets the step name.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for analysis
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.ViewAnalysisResult">
            <summary>
            Views the analysis result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.GetWindowType(Slb.ToolScope.Framework.Data.TestXmlSchema.TssDisplayConfigType)">
            <summary>
            Uses UI configuration to retrieve the window type
            </summary>
            <param name="displayConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.GetDumpFileInformation(Slb.ToolScope.Framework.Data.TestXmlSchema.TssAnalysisStepBaseType,System.Collections.Generic.List{System.String},Slb.ToolScope.Framework.Data.TestXmlSchema.ZoneCollectionType)">
            <summary>
            Retrieves the dump file information
            </summary>
            <param name="definition"></param>
            <param name="analysisDataInfo"></param>
            <param name="tssZones"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisStep.DisplayResultAutomatically">
            <summary>
            Gets or sets whether automatically display the result
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpBeforeDeleteStep">
            <summary>
            Dump the tool before starts the TSS tests. 
            Different with class TssDumpStep, this step just dumps the tool data without considering the TSS Test Monitor Zone configurations.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpBeforeDeleteStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpBeforeDeleteStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectRootNode">
            <summary>
            The root tree which holds the TssProject sub tree.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectRootNode.#ctor(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Standard constructor
            </summary>
            <param name="project">the TssProject instance which will be associated with TssProject sub tree</param>
            <param name="workflow"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectRootNode.FindTSSProjReportStepNode(System.Windows.Forms.TreeNode)">
            <summary>
            Starts from a tree node and finds its parent tree node which holds the Tss Project. 
            Then, search its child nodes to find the report node which directly belongs to the Tss Project.
            </summary>
            <param name="theNode">the tree node where search starts from</param>
            <returns>the target report step node</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectRootNode.CreateTssProjectTree(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Creates a <see cref="T:System.Windows.Forms.TreeNode"/> with a child <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/>
            for each workflow in the <see cref="T:Slb.ToolScope.Framework.UITier.WorkStepCollection"/>
            This routine will read the information from the project and use them in the tree.
            </summary>
            <param name="project">TssProject instance</param>
            <param name="tssWorkflow">Workflows to add to node</param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecific">
            <summary>
            Loads the tool specific DLL
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecific.Load(Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Loads the tool specific DLL.
            </summary>
            <param name="contextMgr">Tool context manager</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecific.Initialize(Slb.ToolScope.Framework.UITier.Tasks.IToolSpecific,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Initializes it's ToolContextManager
            </summary>
            <param name="toolSpecific"></param>
            <param name="contextMgr"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFormatRecordingMemoryStep">
            <summary>
            Tss Format recording memory step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFormatRecordingMemoryStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFormatRecordingMemoryStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of creating a new Tss project and save the previous one if it exists.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask.#ctor(System.String,Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask"/> class.
            </summary>
            <param name="name"></param>
            <param name="tssTestObj"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility">
            <summary>
            An utility class to handle Tss project tree view and nodes
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindParentTestObjectTreeNode(System.Windows.Forms.TreeNode)">
            <summary>
            Starts from a tree node and finds its parent tree node which holds the Tss Test object (TssTestObject).
            </summary>
            <param name="theNode">the tree node where search starts from</param>
            <returns>the node which holds the Tss Test object (TssTestObject)</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindChildTestObjTreeNode(System.Windows.Forms.TreeNode,System.String)">
            <summary>
            Starts from a tree node and finds its parent tree node which holds the Tss Test object (TssTestObject).
            </summary>
            <param name="treeNode"></param>
            <param name="testName">the name of the Test Object looking for</param>        
            <returns>the node which holds the Tss Test object (TssTestObject)</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.IsTssTestNotStarted(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode)">
            <summary>
            Try to dertimine if the test is a brand new test, and has not been started yet.
            </summary>
            <param name="theNode">the tree node which holds the Tss Test object (TssTestObject)</param>
            <returns>true if it is a new test, otherwise false</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.IsTssFlowStarted(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Gets whether the Tss flow started
            </summary>
            <param name="theNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.IsTssTestTreeNodeCompleted(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode)">
            <summary>
            Try to dertimine if the test is completed or not.
            </summary>
            <param name="theNode">the tree node which holds the Tss Test object (TssTestObject)</param>
            <returns>true if the test is completed, otherwise false</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.IsWorkStepTreeNodeCompleted(System.Windows.Forms.TreeNode)">
            <summary>
            Gets whether the Tss work step completed
            </summary>
            <param name="theNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.IsWorkStepCompleted(System.Windows.Forms.TreeNode)">
            <summary>
            Gets whether the Tss work step started
            </summary>
            <param name="theNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.CreateWorkflowTree(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Create a Tss work flow tree
            </summary>
            <param name="workstep"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTopParentTSSProjectOrActivityNode(System.Windows.Forms.TreeView,System.String)">
            <summary>
            Find the top parent tss project by description
            </summary>
            <param name="treeView"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTopParentTSSProjectOrActivityNode(System.Windows.Forms.TreeNode)">
            <summary>
            Find the top parent tss project by tree node
            </summary>
            <param name="theNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.AddTssActivityWorkflowToWorkflowTree(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView,Slb.ToolScope.Framework.UITier.Tasks.Workflow,Slb.ToolScope.Framework.Data.UserModeType)">
            <summary>
            Add Tss Activity work flow to the work flow tree
            </summary>
            <param name="workFlowTreeView"></param>
            <param name="tssProjectWorkflow"></param>
            <param name="userMode"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.AddTssProjectWorkflowToWorkflowTree(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Add Tss project work flow to the work flow tree
            </summary>
            <param name="workFlowTreeView"></param>
            <param name="tssProjectWorkflow"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.RebuildTssTestWorkflowTree(Slb.ToolScope.Framework.Data.TssProject,System.Windows.Forms.TreeNode)">
            <summary>
            Rebuild the work flow tree
            </summary>
            <param name="tssProject"></param>
            <param name="tssWorkStepNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTssWorkStepTreeNode(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView,System.String,System.String)">
            <summary>
            Find the tree node by WorkFlowTreeView, test name or step name
            </summary>
            <param name="treeView"></param>
            <param name="testName"></param>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTssWorkStepTreeNode(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase,System.String,System.String)">
            <summary>
            Find the tree node by TssTreeNodeBase, test name or step name
            </summary>
            <param name="rootNode"></param>
            <param name="testName"></param>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTssWorkStepTreeNode(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode,System.String)">
            <summary>
            Find the tree node by TssTestTreeNode, test name 
            </summary>
            <param name="tssTestTreeNode"></param>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TreeViewUtility.FindTssWorkStepTreeNode(System.Windows.Forms.TreeNode,System.String)">
            <summary>
            Find the tree node by TssTestTreeNode, step name 
            </summary>
            <param name="treeNode"></param>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkflow">
            <summary>
            Tool initialization workflow.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkflow.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkflow"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkflow.CreateWorkSteps">
            <summary>
            Creates the work steps for this workstep.
            </summary>
            <returns>true if succesful; otherwise, false</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.InitializationWorkflow.Image">
            <summary>
            Gets the workstep image.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep"/> of saving dump file.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep"/> instance.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.DumpType">
            <summary>
            Gets and sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.DumpType"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.DumpOutput">
            <summary>
            Gets and sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.DumpWorkStep.DumpOutput"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of retrieving BER data from tool
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask.#ctor(System.String,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask"/> class.
            </summary>
            <param name="name">Task name</param>
            <param name="toolContextMgr">Tool Context Manager</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask.BeginAsync(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Begin backgroud worker's async work
            </summary>
            <param name="backgroundWorker"></param>
            <param name="doWorkEventArgs"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.BER.RetrieveBERDataTask.Service">
            <summary>
            Gets or sets the business service of retrieving BER data from tool
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask">
            <summary>
             A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.OnDependencyChanged(System.Object,System.EventArgs)">
            <summary>
            Handles dependency changed events.
            </summary>
            <param name="sender"></param>
            <param name="Args"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.AutoSaveProject(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Auto save the project
            </summary>
            <param name="project"></param>
            <param name="toolContextManager"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.DisplaySaveProjectWindow(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Display the SaveProject Window
            </summary>
            <param name="tssProject"></param>
            <param name="toolContextManager"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssProject"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssSaveNewProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssSaveNewProjectTask"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssSaveModifiedProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveProjectTask.TssSaveModifiedProjectTask"/>
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Task"/> of creating and starting a TSS Activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.Create(System.String,System.Type,Slb.ToolScope.Framework.LogicTier.ToolContextManager,System.Windows.Forms.Form)">
            <summary>
            Creates and loads a TSS Activity
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework uses this to identify the TSS Activity definition.</param>
            <param name="activityType"> </param>
            <param name="toolContextMgr">current Tool Context Manager reference</param>
            <param name="parentForm">current Parent Form reference</param>
            <returns>newly created TssNewActivityTask</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.#ctor(Slb.ToolScope.Framework.Data.TssActivity,Slb.ToolScope.Framework.LogicTier.ToolContextManager,System.Windows.Forms.Form)">
            <summary>
            The constructor creates new activity based on the existing TssActivity instance.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.#ctor(System.String,System.String,System.Type,Slb.ToolScope.Framework.LogicTier.ToolContextManager,System.Windows.Forms.Form)">
            <summary>
            The constructor creates new activity based on the description defined in the TssActivity definition.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.TssActivityWorkFlow">
            <summary>
            Gets an instance of TSS Activity <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewActivityTask.TssActivity">
            <summary>
            Newly created TssActivity object
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode">
            <summary>
            The tree node holds the history of the TssActivity.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode.CreateActivityHistoryNode(Slb.ToolScope.Framework.Data.TssActivity,System.String)">
            <summary>
            The utility to create the TssActivity history sub tree.
            </summary>
            <param name="tssActivity">TssActivity object reference</param>
            <param name="testName"></param>
            <returns>the root node of the TssActivity history sub tree</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Default constructor to create the root node of TssActivity history sub tree.
            </summary>
            <param name="dirInfo">"history" directory information object</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode.DeleteTssHistory">
            <summary>
            Deletes the history of the TssActivity
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode.HistoryFolder">
            <summary>
            The corresponding "history" directory information.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory">
            <summary>
            A dependency factory for creating a <see cref="T:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory"/>.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.#ctor(Slb.ToolScope.Framework.Data.ToolContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory"/> class.
            </summary>
            <param name="toolContext"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.Create(System.Object[])">
            <summary>
            Creates the dependency.
            </summary>
            <param name="parameters">The dependency parameters.</param>
            <returns>The dependency</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.GetDependencyCode(System.Object[])">
            <summary>
            Gets the dependency code.
            </summary>
            <param name="parameters">The dependency parameters.</param>
            <returns>The dependency code</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.Name">
            <summary>
            Gets the name of the dependncy.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck">
            <summary>
            Defines the available validation based on the tool xml
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.Calibration">
            <summary>
            Calibration
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.MWDTool">
            <summary>
            MWDTool
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.SelfDiagnostics">
            <summary>
            SelfDiagnostics
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.SetClock">
            <summary>
            SetClock
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.TestModeGroup">
            <summary>
            TestModeGroup
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck.TSSDefined">
            <summary>
            TSSDefined
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.ToolXmlDependency">
            <summary>
            A dependency to enable the corresponding items based on Opcode support defined in Tool XML.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.GetDependencySummary">
            <summary>
            Get the best summary description about this dependency.
            </summary>
            <returns>dependency description</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.#ctor(Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck,Slb.ToolScope.Framework.Data.ToolContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.ResourceDependency"/> class.
            </summary>
            <param name="validationName">Enumeration value of name of validation</param>
            <param name="toolContext">ToolType to be checked</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.Acquire(System.Object,Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Acquire the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
            <param name="type">The acquisition type.</param>
            <returns>
            	<c>true</c> if the dependency has been acquired; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.CanAcquire(System.Object,Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Determines whether the acquirer can acquire the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
            <param name="type">The acquisition type.</param>
            <returns>
            	<c>true</c> if the acquirer can acquire the specified acquirer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.Evaluate(Slb.ToolScope.Framework.UITier.ToolXmlDependencyFactory.ToolXmlCheck,Slb.ToolScope.Framework.Data.ToolType)">
            <summary>
            Evaluates tool type through ToolXmlCheck
            </summary>
            <param name="toolXmlCheck"></param>
            <param name="toolType"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.Release(System.Object)">
            <summary>
            Releases the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.ToolXmlDependency.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.ToolXmlDependency.Name">
            <summary>
            Name of the dependency
            </summary>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.ToolXmlDependency.DependencyChanged">
            <summary>
            An event that is raised if the dependency has changed state.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ProcessToolWorkflow">
            <summary>
            Process tool workflow.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ProcessToolWorkflow.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ProcessToolWorkflow"/> instance.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ProcessToolWorkflow.CreateWorkSteps">
            <summary>
            Creates worksteps for this workflow
            </summary>
            <returns>true if the worksteps were created succesfully; otherwise, false</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ProcessToolWorkflow.Image">
            <summary>
            Gets the workflow image.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask">
            <summary>
            Represents the base class for dump tasks.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.GetSaveFileDialog">
            <summary>
            Creates and initializes a new instance of  SaveFileDialog 
            </summary>
            <returns>SaveFileDialog</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.GetDumpSetupForm(System.String)">
            <summary>
            Creates instance of DumpSetUpForm with default tool context.
            UserModeType is set from ToolContextManager and DumpType as specified by the client.
            Default DumpType is LowSpeed.
            </summary>
            <param name="dumpFilename">Dump File Name</param>
            <returns>DumpSetupForm</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.GetDumpForm(Slb.ToolScope.Framework.UITier.Forms.DumpSetupForm)">
            <summary>
            Create a new instance of DumpForm using Dump and DumpFilePath information
            provided by DumpSetupForm.
            </summary>
            <param name="dumpSetupForm"></param>
            <returns>DumpForm</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.DumpType">
            <summary>
            Gets and sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.BaseDumpTask.DumpType"/> 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolInitializeStep">
            <summary>
            Tool Calibration TSS WorkStep.
            This step uses the "ToolInitializationService" service to initialize the tool. 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for tool initialization
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep.GetInitializationForm">
            <summary>
            Gets the tool initialization form
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.InitializeWorkStep.ScreenStartMode">
            <summary>
            Screen execution mode. In this class, the initialization is triggered by user. 
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolInitializeStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolCalibrationStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolInitializeStep.ScreenStartMode">
            <summary>
            Gets screen execution mode. In TSS class, the initialization is triggered by system automatically. 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving as a project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.OnDependencyChanged(System.Object,System.EventArgs)">
            <summary>
            Handles dependency changed events.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.TssProject"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.TssSaveNewProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveAsProjectTask.TssSaveNewProjectTask"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Task"/> of loading a TSS Activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask.#ctor(Slb.ToolScope.Framework.Data.TssActivity,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask.OpenActivity(System.String)">
            <summary>
            Open a TSS activity
            </summary>
            <param name="projFilePath"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask.TssActivityWorkFlow">
            <summary>
            Gets an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Workflow"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssLoadActivityTask.TestName">
            <summary>
            Gets the Tss test name
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep">
            <summary>
            A step has the backgroundworker logic embedded
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.m_worker">
            <summary>
            An instance of BackgroundWorker
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.OnWorkerProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Background Worker ProgressChanged event handler.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.OnWorkerDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Background Worker DoWork event handler.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssGenericStep.OnWorkerRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Background Worker RunWorkerCompleted event handler.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of creating a new Tss project and discarding the previous one if it exists.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask.#ctor(System.String,Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask"/> class.
            </summary>
            <param name="name"></param>
            <param name="tssTestObj"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCreateNewTestNoHistoryTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MWDGetModulationSignalTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for MWD to get Modulation Signal
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MWDGetModulationSignalTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MWDGetModulationSignalTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MWDGetModulationSignalTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.DumpReportTask">
            <summary>
            Dump report task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DumpReportTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.DumpReportTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DumpReportTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TimeframeFileConversionWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of converting TimeframeFile task
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TimeframeFileConversionWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TimeframeFileConversionWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TimeframeFileConversionWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.AcquisitionStatusTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of displaying Acquisition Diagnostics form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.AcquisitionStatusTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.AcquisitionStatusTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.AcquisitionStatusTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.AboutFormTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Task"/> of displaying About form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.AboutFormTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.AboutFormTask"/> class.
            </summary>
            <param name="name">The parent.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.AboutFormTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController">
            <summary>
            Binding the workflow tree and corresponding menu items
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.m_contextMenuStrip">
            <summary>
            Context menu to hold menu items, and monitored by controller
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.#ctor(Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView)">
            <summary>
            Creates an instance of WorkStepController
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.AttachTreeViewEvents(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView)">
            <summary>
            Attaches events to the workflow tree view.
            </summary>
            <param name="workFlowTreeView"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.DetachTreeViewEvents(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView)">
            <summary>
            Detaches events to the workflow tree view.
            </summary>
            <param name="workFlowTreeView"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.SetContextMenuStrip(System.Object,System.EventArgs)">
            <summary>
            Sets the context menu used by controller
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnSelectedTreeNode(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Enables controls when tree node is selected
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnTreeStateChanged(System.Object,Slb.ToolScope.Framework.UITier.StateChangedEventArgs)">
            <summary>
            Handles TreeView state changes
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Runs the selected node (if not expanding a parent node)
            </summary>
            <remarks>
            This will perform the action for what would be the first context menu item
            </remarks>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Controls display of context menu (may cancel it)
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickAutoRun(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on Auto Run tool strip button
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickRun(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on Run menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickStartNewTest(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on StartNewTest menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickRestart(System.Object,System.EventArgs)">
            <summary>
            Enables controls when tree node is selected
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickResumeAutoRun(System.Object,System.EventArgs)">
            <summary>
            Enables controls when tree node is selected
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickViewReport(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on StartNewTest menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickSaveTssActivity(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on save menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickLoadTssActivity(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on loads menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickDeleteTssActivity(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on delete menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickClearTssActivity(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on clear menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickViewAnalysis(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on analysis menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickDebug(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on Cancel menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickStopRun(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on Cancel menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.OnClickResumeWorkStep(System.Object,System.EventArgs)">
            <summary>
            Event handler for clicking on Cancel menu item
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.AutoRun(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Executes AutoRun
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.GetNodeCanCancel">
            <summary>
            Search the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView"/> for an active node that can be cancelled
            </summary>
            <remarks>
            As only one task can be active at one time, 
            the node found either is running that task, 
            or is a parent of that task</remarks>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.PrepareRestartWorkStep(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode@)">
            <summary>
            Prepare the re-start work step
            </summary>
            <param name="selectedNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.GetTssRestartWorkflowWorkStepTaskImplementation(Slb.ToolScope.Framework.Data.TssProject,System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRestartWorkflowWorkStepTask"/>
            </summary>
            <param name="origTssProject"></param>
            <param name="testName"></param>
            <param name="stepName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.Dispose">
            <summary>
            Releases resources
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.MenuBuilder">
            <summary>
            Gets or sets an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.TreeView">
            <summary>
            Gets or sets an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.ToolContextManager">
            <summary>
            Gets or sets the current ToolContextManager
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.HasProject">
            <summary>
            Gets whether the workflow tree has any TSS Projects
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController.CurrentSelectedTssProject">
            <summary>
            Gets currently user selected TssProject
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView">
            <summary>
            A <see cref="T:System.Windows.Forms.TreeView"/> for TSS workflow
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView">
            <summary>
            Interface of a <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.GetNativeControl">
            <summary>
            Gets the native control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.AddWorkflows(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Adds a sub-tree representing a collection of workflows
            </summary>
            <param name="text">Text to display for sub-tree</param>
            <param name="workflows">Workflows to be added to sub-tree</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.AddBasicWorkflows(Slb.ToolScope.Framework.Data.UserModeType,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Adds a sub-tree representing a collection of workflows to userMode + " Activities"
            </summary>
            <param name="userMode"></param>
            <param name="workflows"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.AddTssProjectWorkflows(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Adds a sub-tree representing the TSS Project sub tree.
            </summary>
            <param name="project"></param>
            <param name="workflow"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.GetTssProjectNode">
            <summary>
            Gets the tree node which holds the Tss project
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.GetAllTssActivityRootNode">
            <summary>
            Gets all Tss activity root nodes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.FindTssTestNode(System.String)">
            <summary>
            Finds the Tss test node
            </summary>
            <param name="testName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ReplaceTssTestWorkFlow(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Replace a sub-tree.
            </summary>
            <param name="testWorkStep">Tss Test flow sub-tree replacement.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.RemoveWorkflow(Slb.ToolScope.Framework.Data.TssProject)">
            <summary>
            Remove a sub-tree representing a collection of workflows
            </summary>
            <param name="project">Project to remove</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.Refresh">
            <summary>
            Refresh Tss Work Flow tree to reflect the most current status
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.RefreshTssProjectNode(System.Windows.Forms.TreeNode)">
            <summary>
            Refresh Tss Work Flow tree to reflect the most current status
            </summary>
            <param name="treeNode"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.RefreshTssWorkFlow(System.Windows.Forms.TreeNode)">
            <summary>
            Refresh Tss Work Flow tree to reflect the most current status
            </summary>
            <param name="treeNode"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.IsInvokeRequired">
            <summary>
            Gets whether it is invoke required
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ParentForm">
            <summary>
            Gets or sets the parent form
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ToolStrip">
            <summary>
            Gets or sets the toolstrip associated with the tree
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ToolContextManager">
            <summary>
            Gets or sets a <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ToolContextManager"/> object
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.NodeUnderMouse">
            <summary>
            Gets the TreeNode under the mouse
            <remarks>It is not necessarily selected</remarks>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ActiveNodes">
            <summary>
            Gets the List of TreeNodes that are currently active
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.HasActiveNodes">
            <summary>
            Gets whether it has active nodes?
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.WorkFlowTreeController">
            <summary>
            Gets a <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.WorkFlowTreeController"/> object
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.SelectedNode">
            <summary>
            Gets the selected node
            </summary>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.IWorkFlowTreeView.ToolStripChanged">
            <summary>
            ToolStrip changed event
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetNativeControl">
            <summary>
            Gets the native control corresponding to WorkFlowTreeView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.Refresh">
            <summary>
            Refresh the view of WorkFlowTreeView.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.Dispose(System.Boolean)">
            <summary>
            Release the resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.AddWorkflows(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Adds a sub-tree representing a collection of workflows.
            </summary>
            <param name="text">Text to display for sub-tree</param>
            <param name="workflows">Workflows to be added to sub-tree</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.AddBasicWorkflows(Slb.ToolScope.Framework.Data.UserModeType,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Adds a sub-tree representing a collection of workflows to the node of userMode + " Activities".
            </summary>
            <param name="userMode"></param>
            <param name="workflows"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.AddTssProjectWorkflows(Slb.ToolScope.Framework.Data.TssProject,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Adds a sub-tree representing the TSS Project sub tree.
            </summary>
            <param name="project">Tss Project, project name will be displayed as tree node name.</param>
            <param name="workflow">Workflows to be added to sub-tree</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.AddTssActivityWorkflows(Slb.ToolScope.Framework.Data.UserModeType,Slb.ToolScope.Framework.Data.TssActivity,Slb.ToolScope.Framework.UITier.Tasks.Workflow)">
            <summary>
            Adds a sub-tree representing the TSS Activity sub tree.
            </summary>
            <param name="userMode"></param>
            <param name="project"></param>
            <param name="workflow"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetTssProjectNode">
            <summary>
            Gets the treenode representing the TSS Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetUserModeRootNode(Slb.ToolScope.Framework.Data.UserModeType)">
            <summary>
            Gets the treenode which text is userMode + " Activities"
            </summary>
            <param name="userMode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetAllTssActivityRootNode">
            <summary>
            Gets the list of all TSS Activity tree nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.FindTssTestNode(System.String)">
            <summary>
            Gets the TSS Test tree node.
            </summary>
            <param name="testName"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ReplaceTssTestWorkFlow(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Replaces a test sub-tree.
            </summary>
            <param name="testWorkStep">Tss Test flow sub-tree replacement.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.RemoveWorkflow(Slb.ToolScope.Framework.Data.TssProject)">
            <summary>
            Removes a sub-tree representing a collection of workflows.
            </summary>
            <param name="project">Project to remove</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.RefreshTssProjectNode(System.Windows.Forms.TreeNode)">
            <summary>
            Refreshes TSS Work Flow tree to reflect the most current status.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.RefreshTssWorkFlow(System.Windows.Forms.TreeNode)">
            <summary>
            Refresh TSS Work Flow tree to reflect the most current status.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.IsInvokeRequired">
            <summary>
            Gets whether invoke is required
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetNodeUnderMouse(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Ensures node clicked on is selected (if desired).
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.CheckBeforeSelect(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Checks node for selection criteria
            </summary>
            <param name="workStepNode"></param>
            <returns>false means canceled</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.OnSelectedTreeNode(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Updates instructions when node selected
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.OnNodeStateChanged(System.Object,Slb.ToolScope.Framework.UITier.StateChangedEventArgs)">
            <summary>
            Tracks active nodes to maintain tree state
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.GetWorkflowImages">
            <summary>
            Builds default ImageList
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.AttachWorkStepStateChanged(System.Windows.Forms.TreeNode)">
            <summary>
            Connect to each node's StateChanged event
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.DetachWorkStepStateChangedAndCleanUp(System.Windows.Forms.TreeNode)">
            <summary>
            This function does:
            (1) Disconnect from each node's StateChanged event
            (2) Call dispose() on each associated TssWorkStep to clean up.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.FinalizeTssTest(System.Windows.Forms.TreeNode)">
            <summary>
            A recursive function to traverse all TSS Step Node to finalize the test. Thus, user can not run the test again.
            It does:
            (1) Remove the instruction form from the associated TssTestStep.
            (2) To be continued...
            </summary>
            <param name="node">Tss Step tree node</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.CreateWorkflowTree(System.String,System.Collections.Generic.IEnumerable{Slb.ToolScope.Framework.UITier.WorkStep})">
            <summary>
            Creates a <see cref="T:System.Windows.Forms.TreeNode"/> with a child <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/>
            for each workflow in the <see cref="T:Slb.ToolScope.Framework.UITier.WorkStepCollection"/>
            </summary>
            <param name="nodeText">Text to display for <see cref="T:System.Windows.Forms.TreeNode"/></param>
            <param name="workflows">Workflows to add to node</param>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.InstructionsChanged">
            <summary>
            Provides an event handler to process instructions to be displayed change event.
            </summary>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.TreeStateChanged">
            <summary>
            Provides an event handler to process Tree state changed event.
            </summary>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ToolStripChanged">
            <summary>
            Provides an event handler to process ToolStrip changed event.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ParentForm">
            <summary>
            Gets the parent form
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.InstructionUri">
            <summary>
            Gets the URI where the instructions can be found.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ToolStrip">
            <summary>
            Gets or sets the toolstrip associated with the tree.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.NodeUnderMouse">
            <summary>
            Gets the TreeNode under the mouse
            (not necessarily selected)
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ActiveNodes">
            <summary>
            Gets the List of TreeNodes that are currently active.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.HasActiveNodes">
            <summary>
            Gets whether there are any active nodes.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.WorkFlowTreeController">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.WorkFlowTreeController"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ToolContextManager">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeView.ToolContextManager"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.ToolStripEventArgs">
            <summary>
            Provides data for the ToolStripChanged event.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.ToolStripEventArgs.#ctor(System.Windows.Forms.ToolStrip)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.ToolStripEventArgs"/> class.
            </summary>
            <param name="toolStrip"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.ToolStripEventArgs.ToolStrip">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.ToolStripEventArgs.ToolStrip"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTsim2PowerOnOffStep">
            <summary>
            TSS Step manipulates TSIM2 power manually.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTsim2PowerOnOffStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTsim2PowerOnOffStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTsim2PowerOnOffStep.TurnOnOffTsim2Power(Slb.ToolScope.Framework.Data.TestXmlSchema.Tsim2InstanceType[])">
            <summary>
            Turns on/off Tsim2 power.
            </summary>
            <param name="tsim2Instances"></param>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMeasurementEvaluationBaseWorkStep">
            <summary>
            Represents the base class for Tss Measurement Evaluation tasks
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMeasurementEvaluationBaseWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMeasurementEvaluationBaseWorkStep"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMeasurementEvaluationBaseWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMeasurementEvaluationBaseWorkStep.MeasurementDataTableSpecialLogic">
            <summary>
            Initialize the data table used by the measurement group
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.ExportProjectTask">
            <summary>
             A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> to export a project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ExportProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.ExportProjectTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ExportProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder">
            <summary>
            Builds Context Menu items for <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.WorkFlowTreeController"/>.
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.MenuText">
            <summary>
            Represents a collection of menu item text.
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.m_toolTips">
            <summary>
            Represents a collection of menu item tool tips.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.#ctor(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder"/> class.
            </summary>
            <param name="workflowTreeViewController"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildContextMenuItem(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum,System.EventHandler)">
            <summary>
            Builds Context Menu items.
            </summary>
            <param name="contextMenuItem"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildToolStripButton(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum,System.EventHandler)">
            <summary>
            Builds ToolStrip button items.
            </summary>
            <param name="contextMenuItem"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.GetContextMenuItem(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum)">
            <summary>
            Gets the Context Menu Item.
            </summary>
            <param name="contextMenuItem"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.GetToolStripButton(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum)">
            <summary>
            Gets the ToolStrip Button.
            </summary>
            <param name="contextMenuItem"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.EnableMenu(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum,System.Boolean)">
            <summary>
            Enables/disables the Context Menu Item.
            </summary>
            <param name="contextMenuItem"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.DetermineMenuStyle(System.Windows.Forms.TreeNode)">
            <summary>
            Gets the treenode's menu style.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.DetermineTssTestMenuStyle(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTestTreeNode)">
            <summary>
            Gets the test treenode's menu style.
            </summary>
            <param name="tssTestTreeNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.DetermineTssTestWorkStepMenuStyle(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Gets the workstep treenode's menu style.
            </summary>
            <param name="tssWorkStepTreeNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildContextMenu(System.Windows.Forms.TreeNode,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu.
            </summary>
            <param name="node"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildTssWorkStepTreeNodeContextMenu(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS workstep.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildOldWorkTreeNodeContextMenu(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS workstep.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildTssWorkFlowTreeNodeContextMenu(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS workflow.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildTssProjectNodeContextMenu(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssTreeNodeBase,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS Project.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildTssTestTreeNodeContextMenu(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS Test.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.BuildTssActivityTreeNodeContextMenu(System.Windows.Forms.TreeNode,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Builds the context menu for TSS Activity.
            </summary>
            <param name="node"></param>
            <param name="menuStyle"></param>
            <param name="menuStrip"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.WorkFlowTreeController">
            <summary>
            Gets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.WorkFlowTreeController"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ToolStripMenuItems">
            <summary>
            Gets a collection of ToolStrip menu items.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ToolStripButtons">
            <summary>
            Gets a collection of ToolStrip button items.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle">
            <summary>
            Specifies the style mode for menu items.
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.Unknown">
            <summary>
             Unknown
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.RegularMenu">
            <summary>
            RegularMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.AnalysisMenu">
            <summary>
            AnalysisMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssTaskRunningMenu">
            <summary>
            TssTaskRunningMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssRestartMenu">
            <summary>
            TssRestartMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssStartNewTestMenu">
            <summary>
            TssStartNewTestMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssTestMenu">
            <summary>
            TssTestMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssResumeTestMenu">
            <summary>
            TssResumeTestMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssProjectAutoRunMenu">
            <summary>
            TssProjectAutoRunMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssActivityMenu">
            <summary>
            TssActivityMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssAdvancedActivityMenu">
            <summary>
            TssAdvancedActivityMenu
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.TreeNodeMenuStyle.TssLoadActivityMenu">
            <summary>
            TssLoadActivityMenu
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum">
            <summary>
            Specifies the item action mode for menu items.
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.Run">
            <summary>
            Run
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.AutoRun">
            <summary>
            AutoRun
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.CancelRun">
            <summary>
            CancelRun
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.ResumeWorkStep">
            <summary>
            ResumeWorkStep
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.ResumeAutoRun">
            <summary>
            ResumeAutoRun
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.Restart">
            <summary>
            Restart
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.StartNewTest">
            <summary>
            StartNewTest
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.ViewReport">
            <summary>
            ViewReport
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.ViewAnalysis">
            <summary>
            ViewAnalysis
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.RestartTssActivity">
            <summary>
            RestartTssActivity
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.SaveTssActivity">
            <summary>
            SaveTssActivity
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.LoadTssActivity">
            <summary>
            LoadTssActivity
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.DeleteTssActivity">
            <summary>
            DeleteTssActivity
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.ClearTssActivity">
            <summary>
            ClearTssActivity 
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeViewMenuBuilder.ContextMenuItemEnum.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> and <see cref="T:Slb.ToolScope.Framework.UITier.Forms.TechLogEx.ITechLogController"/>  for TechLog
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.CreateTechLogService(System.String,System.String)">
            <summary>
             Create TechLog Service
            </summary>
            <param name="serviceName">Service name</param>
            <param name="dumpFilePath">Dump file path</param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.CreateUICoreLogic">
            <summary>
            Create an instance of TechLogUICoreLogic
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.GetTechLogServiceName(System.String)">
            <summary>
            Gets the service name of TechLog.
            </summary>
            <param name="dumpFilePath"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.ActivityName">
            <summary>
            Tech log task activity name
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.TssActivity">
            <summary>
            Tech log task activity
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TechLogExTask.UiCoreLogic">
            <summary>
            Gets an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Forms.TechLogEx.TechLogUICoreLogic"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.RealTimeWorkStep">
            <summary>
            Real-time configuration work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RealTimeWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.RealTimeWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RealTimeWorkStep.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns><c>true</c> if the workstep can continue; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutCascadeTask">
            <summary>
            Cascade layour of the MDI windows.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutCascadeTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutCascadeTask"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutCascadeTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileHorizontalTask">
            <summary>
            Horizontal tile layout of the MDI windows.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileHorizontalTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileHorizontalTask"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileHorizontalTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileVerticalTask">
            <summary>
            Vertical tile layour of the MDI windows.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileVerticalTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileVerticalTask"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MdiLayoutTileVerticalTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for master calibration
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.m_calibrationFilename">
            <summary>
            Store calibration Filename
            </summary>
        </member>
        <member name="F:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.m_calibration">
            <summary>
            Store Calibration
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.LoadCalib">
            <summary>
            Load Calibration
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.GetCalibrationGridFormInstance(Slb.ToolScope.Framework.Data.ToolContext,Slb.ToolScope.Framework.Data.ToolConfiguration.Calibration)">
            <summary>
            Gets the instnace of <see cref="T:Slb.ToolScope.Framework.UITier.Forms.CalibrationGridForm"/>
            </summary>
            <param name="toolContext"></param>
            <param name="calibration"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.Calibrate(System.Boolean)">
            <summary>
            Writing calibration to tool if calibrate
            </summary>
            <param name="calibrate">Whether writing calibration to tool</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Form closed event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.LoadCalibration(Slb.ToolScope.Framework.Data.ToolConfiguration.Calibration)">
            <summary>
            Load Calibration
            </summary>
            <param name="calibration"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.Calibration">
            <summary>
            Gets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.Calibration"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.MasterCalibrationTask.calibrationFilename">
            <summary>
            Gets calibration Filename
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.EditToolDefinitionTask">
            <summary>
            Edit Tool task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.EditToolDefinitionTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.EditToolDefinitionTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.EditToolDefinitionTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MenuMappingManager">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> for menu mapping
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MenuMappingManager.AddMappedMenuItems(Slb.ToolScope.Framework.UITier.ToolScopeMenu,System.Windows.Forms.Form,Slb.ToolScope.Framework.LogicTier.ToolContextManager,Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Add mapped menu items
            </summary>
            <param name="menu"></param>
            <param name="parent"></param>
            <param name="toolContextMgr"></param>
            <param name="treeController"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MenuMappingManager.menuItem_MenuItemClicked(System.Object,Slb.ToolScope.Framework.UITier.ToolScopeMenuItemEventArgs)">
            <summary>
            Method contains logic to copy temp activity from temp folder to permanent activity folder location under BitRun folder.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MenuMappingManager.RebuildTestFlow(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow,System.Windows.Forms.Form)">
            <summary>
            Rebuild Tss test work flow
            </summary>
            <param name="tssWorkFlow"></param>
            <param name="parentForm"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MenuMappingManager.CreateTssWorkflow(System.String,System.Windows.Forms.Form,Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Create Tsss work flow
            </summary>
            <param name="activityTestName"></param>
            <param name="parent"></param>
            <param name="toolContextMgr"></param>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of executing Tool self test service.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep.BeginAsync(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Runs asynchronous work.
            </summary>
            <param name="backgroundWorker"></param>
            <param name="doWorkEventArgs"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep.FurtherProcessingBeforeExit(Slb.ToolScope.Framework.Data.TaskState@)">
            <summary>
            Processing logic before exist the step.
            This method can be overridden to provide extra processing logic before exits.
            </summary>
            <param name="taskState">the task state returned from the core logic</param>
            <returns>successfully or not</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSelfTestStep.OnRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Background Worker RunWorkerCompleted event handler.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.BusConnectionTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep"/> of bus connection.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BusConnectionTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.BusConnectionTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BusConnectionTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter">
            <summary>
            This class adapts a regular TSS Work Step to have the Work Flow characteristics, for example, have children steps, and is also executable.
            This adpater is specially designed for Tss Analysis Flow.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.#ctor(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep)">
            <summary>
            Standard work flow adapter constructor.
            </summary>
            <param name="internalAnalysisStep"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.Start">
            <summary>
            Starts the task
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.WorkStepEnded(System.Object,System.EventArgs)">
            <summary>
            Handle Workstep ended
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.ViewAnalysisResult">
            <summary>
            Launches the screen to view the analysis result.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.MarkStepRunnable(System.Collections.Generic.List{Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep})">
            <summary>
            Marks the list of Worksteps runnable
            </summary>
            <param name="analysisStepExecOrder"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.ExecutionMaster">
            <summary>
            Gets or sets whether it is ExecutionMaster
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.AnalysisSteps">
            <summary>
            List of Analysis Tss Worksteps
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.DisplayResultAutomatically">
            <summary>
            Gets whether displaying result automatically
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.TssAdapterDummyStep">
            <summary>
            If TssWorkFlow doesn't have step implementation specified, then this dummy step will be created and used instead.
            This is mainly used for the background compatible purpose.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.TssAdapterDummyStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.TssAdapterDummyStep"/> class.
            </summary>
            <param name="name">work step name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssAnalysisFlowAdapter.TssAdapterDummyStep.Start">
            <summary>
            Starts the work step
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.ImportProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> to import a project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ImportProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.ImportProjectTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ImportProjectTask.OpenProject">
            <summary>
            Opens a Tss project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> for TechLog
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.SimulateToolTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> for Tool Simulator
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SimulateToolTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.SimulateToolTask"/> class.
            </summary>
            <param name="name">The name of the task</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SimulateToolTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SimulateToolTask.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.DeleteFilesTask">
            <summary>
            Delete all data files task
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DeleteFilesTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.DeleteFilesTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.DeleteFilesTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
            	<c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving a new project
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveNewProjectTask.TssProject"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TestToolIdTask">
            <summary>
            Miscellaneous task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestToolIdTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TestToolIdTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestToolIdTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.RecordedConfigurationWorkStep">
            <summary>
            Recorded configuration work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RecordedConfigurationWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.RecordedConfigurationWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RecordedConfigurationWorkStep.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns><c>true</c> if the workstep can continue; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.HelpTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Task"/> of opening online help.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.HelpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.HelpTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.HelpTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ConfigurationDiagnosticsTask">
            <summary>
            Configuration diagnostics task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ConfigurationDiagnosticsTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ConfigurationDiagnosticsTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ConfigurationDiagnosticsTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.VerifyFirmwareCompatibilityWorkStep">
            <summary>
            Verify Firmware Compatibility work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.VerifyFirmwareCompatibilityWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.VerifyFirmwareCompatibilityWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.VerifyFirmwareCompatibilityWorkStep.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns><c>true</c> if the workstep can continue; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.UltraHighSpeedDumpTask">
            <summary>
            Ultra high speed dump task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.UltraHighSpeedDumpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.UltraHighSpeedDumpTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.UltraHighSpeedDumpTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of removing an old project.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.DisplayProjectCloseCancelledMessage">
            <summary>
            Displays close/cancal message
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.ProjectCloseCancelledHandler">
            <summary>
            The close/cancal event handler
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssRemoveProjectTask.TssProject"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssInstructionStep">
            <summary>
             A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying Instruction.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssInstructionStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssInstructionStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssInstructionStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.SnapShotTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> for SnapShot task
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SnapShotTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.SnapShotTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SnapShotTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.LogMessageTask">
            <summary>
            Miscellaneous task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogMessageTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TestToolIdTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogMessageTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.SetToolSerialNumberTask">
            <summary>
            Clock diagnostics task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SetToolSerialNumberTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ClockTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.SetToolSerialNumberTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ComputeAngleXWorkStep">
            <summary>
            Compute Angle X task
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ComputeAngleXWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ComputeAngleXWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ComputeAngleXWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep">
            <summary>
            Dump the tool based on TSS Test Monitor Zone configuration.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.Dispose(System.Boolean)">
            <summary>
            Releases resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.PrepareDumpingFile">
            <summary>
            Prepare dumping the data from the Tool.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpFile(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Dump the .TDF file from the Tool.
            </summary>
            <returns>Is dump file created?</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.GenerateTimeFrameFile(System.Collections.Generic.List{System.String})">
            <summary>
            Generate the time frame files based on the passed dump file names.
            </summary>
            <param name="dumpFileNames">time frame names</param>
            <returns>created time frame file names</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.AssignTimeFrameFileNamesToZone(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Assign the TimeFrame file name to the associated zone definition.
            </summary>
            <param name="generatedTdFfilenames">generated 'TDF' TimeFrame file names</param>/// 
            <param name="generatedBindBfilenames">generated 'BIN_DB' TimeFrame file names</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.CreateTimeFrameFileTreeNode(System.Collections.Generic.List{System.String})">
            <summary>
            Create file tree node to display the generated time frame files.
            </summary>
            <param name="timeFrameFileNames">TimeFrame file names</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.ReadDataFromTool(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Reads data from tool
            </summary>
            <param name="dumpFileName"></param>
            <param name="dumpFileCreated"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.SetDumpOutPut(Slb.ToolScope.Framework.LogicTier.Dump)">
            <summary>
            Override to set the dumpouptput.
            This will override the user selection in Dump setup form.
            </summary>
            <param name="dump"> </param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpConfigEvnet">
            <summary>
            Gets the dump configuration event
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpingEvent">
            <summary>
            Gets the dumping event
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpFileConvertEvent">
            <summary>
            Gets the dump file conversion event
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.ShutDownEvent">
            <summary>
            Gets the shut down event
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpType">
            <summary>
            Gets or sets the dump type
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpSetupForm">
            <summary>
            Gets the instance of DumpSetupForm
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.DumpForm">
            <summary>
            Gets the instance of DumpForm
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssDumpStep.TimeFrameSetupForm">
            <summary>
            Gets the instance of TimeFrameSetupForm
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving a new or modified Tss project.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssCloseProjectTask"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssProject"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssSaveNewProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssSaveNewProjectTask"/> 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssSaveModifiedProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssConfirmSaveProjectTask.TssSaveModifiedProjectTask"/> 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.HighSpeedDumpTask">
            <summary>
            High speed dump task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.HighSpeedDumpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.HighSpeedDumpTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.HighSpeedDumpTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying TSS Project Report.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep.ProjectCloseAction(System.Object,Slb.ToolScope.Framework.Data.TssProject.ProjectCloseEventArgs)">
            <summary>
            Closes the viewer
            </summary>
            <param name="source"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssReportStep.Dispose(System.Boolean)">
            <summary>
            Release resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeNode">
            <summary>
            The tree node holds a workflow
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeNode.#ctor(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/>
            </summary>
            <param name="workstep"><see cref="T:Slb.ToolScope.Framework.UITier.WorkStep"/> to be displayed by this <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode"/></param>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TestModeTask">
            <summary>
            Send test mode task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestModeTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TestModeTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestModeTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessWorkStep"/> of formatting recording memory
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask.StatusForm">
            <summary>
            Gets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.FormatRecordingMemoryTask.StatusForm"/> 
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> and <see cref="T:Slb.ToolScope.Framework.UITier.Forms.TechLogEx.ITechLogController"/>  for TechLog
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TechLogTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.CreateTechLogService(System.String,System.String)">
            <summary>
             Create TechLog Service
            </summary>
            <param name="serviceName">Service name</param>
            <param name="dumpFilePath">Dump file path</param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.CreateUICoreLogic">
            <summary>
            Create an instance of TechLogUICoreLogic
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.GetTechLogServiceName(System.String)">
            <summary>
            Gets the service name of TechLog.
            </summary>
            <param name="dumpFilePath"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.ActivityName">
            <summary>
            Tech log task activity name
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.TssActivity">
            <summary>
            Tech log task activity
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.LogDataViewerTask.UiCoreLogic">
            <summary>
            Gets an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Forms.TechLogEx.TechLogUICoreLogic"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolCalibrationStep">
            <summary>
            Tool Calibration TSS WorkStep.
            This step use the "ToolCalibrationService" service to calibrate the tool. 
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolCalibrationStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolCalibrationStep"/> class
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssToolCalibrationStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTestToolCommunicationStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying Test Tool Communication form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTestToolCommunicationStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTestToolCommunicationStep"/> class
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTestToolCommunicationStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of creating a new project, and saving and removing the old one.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask"/> class.
            </summary>
            <param name="name">Task name</param>
            <param name="projectDescription">Tss project description</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.UserSelectProject(System.String[])">
            <summary>
            Gets the user selected porject
            </summary>
            <param name="projectTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.GetProjectConfirmWindowInstance(Slb.ToolScope.Framework.LogicTier.BusinessService.BusinessServiceBase,System.String,Slb.ToolScope.Framework.Data.TssUIConfigSchema.ProjectUIImplementation)">
            <summary>
            Gets the instance of <see cref="T:Slb.ToolScope.Framework.UITier.Forms.Tss.TssProjectConfirmForm"/>
            </summary>
            <param name="serviceObj"></param>
            <param name="selectedProjectDescription"></param>
            <param name="projUIConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.DisplayProjectConfirmWindow(Slb.ToolScope.Framework.UITier.Forms.Tss.TssProjectConfirmForm)">
            <summary>
            Displays the instance of <see cref="T:Slb.ToolScope.Framework.UITier.Forms.Tss.TssProjectConfirmForm"/>
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.GetPreDefinedProjectTypes">
            <summary>
            Gets a list of pre-defined project types
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.GetTssProjectFromToolScopeConfiguration">
            <summary>
            Gets a list of Tss projects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.GetVisibleTssProjectConfiguration">
            <summary>
            Gets a list of descriptions for the set of <see cref="T:Slb.ToolScope.Framework.Data.ConfigSetting.TssProjectConfiguration"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssProject"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssRemoveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssRemoveProjectTask"/>
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssConfirmSaveProjectTask">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.TssConfirmSaveProjectTask"/>.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssNewProjectTask.PreSelectedProjectDescription">
            <summary>
            Gets pre-selected project description
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.ITssTaskRestartable">
            <summary>
            Interface of restartable <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> or <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ITssTaskRestartable.PrepareRestartTssTask">
            <summary>
            Prepare to restart TssWorkFlow or TssWorkStep
            </summary>
            <returns>true if sucessfully; false if canceled</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.ITssTaskRestartable.RestartTssTask">
            <summary>
            Restart TssWorkFlow or TssWorkStep
            </summary>
            <returns>true if sucessfully; false if canceled</returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory">
            <summary>
            A dependency factory for creating a <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory"/>.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory.#ctor(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory"/> class.
            </summary>
            <param name="treeController"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory.Create(System.Object[])">
            <summary>
            Creates the dependency.
            </summary>
            <param name="parameters">The dependency parameters.</param>
            <returns>The dependency</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory.GetDependencyCode(System.Object[])">
            <summary>
            Gets the dependency code.
            </summary>
            <param name="parameters">The dependency parameters.</param>
            <returns>The dependency code</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependencyFactory.Name">
            <summary>
            Gets the name of the dependncy.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency">
            <summary>
            The dependency object evaluates wheather the user selects a TssProject or not.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.GetDependencySummary">
            <summary>
            Gets the best summary description about this dependency.
            </summary>
            <returns>dependency description</returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.#ctor(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkFlowTreeController)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency"/> class.
            </summary>
            <param name="treeController">Name of the resource.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.Acquire(System.Object,Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Acquire the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
            <param name="type">The acquisition type.</param>
            <returns>
            	<c>true</c> if the dependency has been acquired; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.CanAcquire(System.Object,Slb.ToolScope.Framework.UITier.AcquireType)">
            <summary>
            Determines whether the acquirer can acquire the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
            <param name="type">The acquisition type.</param>
            <returns>
            	<c>true</c> if the acquirer can acquire the specified acquirer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.Release(System.Object)">
            <summary>
            Releases the dependency.
            </summary>
            <param name="acquirer">The acquirer.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.RefreshTssProjectDependencyRelatedObjects">
            <summary>
            Raise TssProject dependency changed event
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.Name">
            <summary>
            Name of the dependency
            </summary>
        </member>
        <member name="E:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.DependencyChanged">
            <summary>
            An event that is raised if the dependency has changed state.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.TssProject">
            <summary>
            The user currently selected TssProject
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssProjectDependency.HasProjectSelected">
            <summary>
            Gets whether there are any projects and, if any, are any selected
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext">
            <summary>
            Specifies a task run context
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.#ctor(Slb.ToolScope.Framework.LogicTier.ToolContextManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext"/> class.
            </summary>
            <param name="toolContextManager">ToolContextManager</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.InitializeWorkFlowContext(Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Initializes the run context for the work flow.
            </summary>
            <param name="workFlow"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.InitializeWorkStepContext(Slb.ToolScope.Framework.UITier.WorkStep,Slb.ToolScope.Framework.UITier.WorkStep)">
            <summary>
            Initialize the run context for the work flow by work step and parent work flow.
            <remarks> Special case here, the only exception which "parentWorkFlow" can be null is the "ReportStep"</remarks>
            </summary>
            <param name="workStep"></param>
            <param name="parentWorkFlow"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.GetZoneDefinition(System.String)">
            <summary>
            Gets ZoneDefinitionType by name.
            </summary>
            <param name="zoneName">Zone name</param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.CurrentWorkStep">
            <summary>
            the work step instance currently own this context
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TaskRunContext.ParentWorkStep">
            <summary>
            the parent work step instance of the current work step instance
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.RecordingMemoryTask">
            <summary>
            Recording memory diagnostics task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RecordingMemoryTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.RecordingMemoryTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.RecordingMemoryTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.LowSpeedDumpTask">
            <summary>
            Low speed dump task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LowSpeedDumpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.LowSpeedDumpTask"/> class.
            Uses the default implementation
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.EnhancedHighSpeedDumpTask">
            <summary>
            Enhanced high speed dump task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.EnhancedHighSpeedDumpTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.EnhancedHighSpeedDumpTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.EnhancedHighSpeedDumpTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ClockTask">
            <summary>
            Clock diagnostics task.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ClockTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ClockTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ClockTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.BinaryTimeFrameWorkStep">
            <summary>
            Create binary time frame file work step.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BinaryTimeFrameWorkStep.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.BinaryTimeFrameWorkStep"/> instance.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.BinaryTimeFrameWorkStep.Execute">
            <summary>
            Activates this work step.
            </summary>
            <returns>
            	<c>true</c> if the workstep can continue; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of sending opcode commands.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.SendOpcode(Slb.ToolScope.Framework.Data.TestXmlSchema.SendOpcodeStepTypeOpcode,System.Byte@)">
            <summary>
            Sends opcode commands.
            </summary>
            <param name="opcodeCommand"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.SendOpcodeCommand(Slb.ToolScope.Framework.Data.ToolContext,Slb.ToolScope.Framework.Data.OpcodeEnum,System.Byte[],System.UInt32,System.UInt32,System.Byte@)">
            <summary>
            Send opcode command
            </summary>
            <returns>opcode command return data</returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.SentOpcodeStatus">
            <summary>
            The sent opcode return status.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.OpcodeResponse">
            <summary>
            The response data returned from the sent opcode. 
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.HasToolScopeError">
            <summary>
            An indicator to tell whether has error or not.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSendOpcodeStep.SendOpcodeCommandDelegate">
            <summary>
            Delegate to send the opcode to the tool.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> of saving TSS Activity.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask.#ctor(System.String,Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestObjectType)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask"/> class.
            </summary>
            <param name="name"></param>
            <param name="tssTestObj"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssSaveActivityTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns><c>true</c> if this task ends after Execute returns; otherwise, <c>false</c></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssElectricalCheckWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying ElectricalCheck form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssElectricalCheckWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssElectricalCheckWorkStep"/> class.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssElectricalCheckWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMonitorWorkStep">
            <summary>
            Represents the base class for Tss monitoring tasks
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMonitorWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssEditPropertyStep"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMonitorWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssMonitorWorkStep.GetDefaultConnection(Slb.ToolScope.Framework.Data.TestXmlSchema.TssTestsCollection)">
            <summary>
            Gets the Tss Test default connection
            </summary>
            <param name="tssTestsCollection"></param>
            <returns></returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFirmwareCheckStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of displaying TssFirmwareCheck form.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFirmwareCheckStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFirmwareCheckStep"/> class.
            </summary>
            <param name="name">Workstep name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssFirmwareCheckStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper">
            <summary>
            Helper class which helps prerequisite setting.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper.BuildTssProjectDependency(System.Windows.Forms.TreeNode)">
            <summary>
            Builds Tss project dependencies.
            </summary>
            <param name="projectTreeNode"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper.ReleaseTssDependency(System.Windows.Forms.TreeNode)">
            <summary>
            Releases Tss project dependencies.
            </summary>
            <param name="tssNode"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper.GetPreRequisiteDependentTreeNode(Slb.ToolScope.Framework.UITier.Tasks.TreeView.WorkStepTreeNode)">
            <summary>
            Gets the prerequisite dependent treen node.
            </summary>
            <param name="workStepTreeNode"></param>
            <returns></returns>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper.TssProject">
            <summary>
            Gets or sets an instance of <see cref="P:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssTreeNodeDependencyHelper.TssProject"/>.
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode">
            <summary>
            The tree node holds the Tss activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.#ctor(Slb.ToolScope.Framework.UITier.WorkStep,Slb.ToolScope.Framework.Data.TssActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode"/> class.
            </summary>
            <param name="workstep"></param>
            <param name="tssActivity"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.RestartTssActivity">
            <summary>
            Restarts the Tss activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.SaveTssActivity">
            <summary>
            Saves the Tss activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.LoadTssActivityHistory(Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssHistoryTreeNode,System.String)">
            <summary>
            Loads the Tss activity from history
            </summary>
            <param name="selectedHistoryNode"></param>
            <param name="testName"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.ClearTssActivity">
            <summary>
            Clears the Tss activity
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.RefreshHistoryNode">
            <summary>
            Refreshes the TssActivity history sub tree.
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.TreeView.TssActivityTreeNode.TssActivity">
            <summary>
            Gets the Tss activity
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase">
            <summary>
            Tool specific class
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.LoadConfigurationFiles">
            <summary>
            Loads tool specific configuration files
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InitializeMenu(Slb.ToolScope.Framework.UITier.ToolScopeMenu)">
            <summary>
            Initializes ToolScope tool specific menu items
            </summary>
            <param name="toolScopeMenu">The ToolScope menu.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InitializeWorkflows(Slb.ToolScope.Framework.UITier.Tasks.WorkflowType,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Initializes ToolScope tool specific workflow collection
            </summary>
            <param name="type">The type of workflows to update with</param>
            <param name="workflows">The workstep collection to update</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InitializeBasicWorkflows(Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Initializes ToolScope tool specific basic workflow collection
            </summary>
            <param name="workflows">The workstep collection to update</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InitializeTestWorkflows(Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Initializes ToolScope tool specific tss test workflow collection
            </summary>
            <param name="workflows">The workstep collection to update</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InitializeCalibrationWorkflows(Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Initializes ToolScope tool specific calibration workflow collection
            </summary>
            <param name="workflows">The workstep collection to update</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.AddTssActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Add a regular TSS Activity to the work flow.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssActivityBeforeWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Insert a regular TSS Activity before the specified work flow
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>        
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssActivityAfterWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Insert a regular TSS Activity after the specified work flow
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ReplaceWorkFlowWithTssActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Replace the specified work flow with the new regular TSS Activity
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.AddTssAdvancedActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection)">
            <summary>
            Add an advanced TSS Activity to the work flow.
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.AddTssAdvancedActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.Boolean)">
            <summary>
            Add an advanced TSS Activity to the work flow.
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="requireActivityBackup">flag to force to create backup when existing ToolScope, or restart the TSS Activity</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssAdvancedActivityBeforeWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Insert an advanced TSS Activity after the specified work flow.
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>        
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssAdvancedActivityBeforeWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String,System.Boolean)">
            <summary>
            Insert an advanced TSS Activity after the specified work flow.
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <param name="requireActivityBackup">flag to force to create backup when existing ToolScope, or restart the TSS Activity</param>
            <returns>successful or not</returns>        
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssAdvancedActivityAfterWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Insert an advanced TSS Activity after the specified work flow
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.InsertTssAdvancedActivityAfterWorkFlow(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String,System.Boolean)">
            <summary>
            Insert an advanced TSS Activity after the specified work flow
            The advanced TSS Activity has ability to persist the history.
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <param name="requireActivityBackup">flag to force to create backup when existing ToolScope, or restart the TSS Activity</param> 
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ReplaceWorkFlowWithTssAdvancedActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String)">
            <summary>
            Replace the specified work flow with the new advanced TSS Activity
            The advanced TSS Activity has ability to persist the history. 
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ReplaceWorkFlowWithTssAdvancedActivity(System.String,Slb.ToolScope.Framework.UITier.WorkStepCollection,System.String,System.Boolean)">
            <summary>
            Replace the specified work flow with the new advanced TSS Activity
            The advanced TSS Activity has ability to persist the history. 
            </summary>
            <param name="tssActivityDescription">Description of TSS Activity. Framework use this to identify the TSS Activity definition.</param>
            <param name="workflows">TSS Actvitiy will be created inside this work flow.</param>
            <param name="workFlowName">target workflow name</param>
            <param name="requireActivityBackup">flag to force to create backup when existing ToolScope, or restart the TSS Activity</param>
            <returns>successful or not</returns>  
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ConfigureActivity(Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkflow,System.Collections.Specialized.NameValueCollection)">
            <summary>
            This method provides a way to configure one's activity/Flow when it is called from the external application.
            </summary>
            <param name="flow">Flow to be configured</param>
            <param name="collection">Parameters to be configured</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.LoadTssXML(Slb.ToolScope.Framework.Data.EmbeddedResourceFileType)">
            <summary>
            Load a specified TSS XML. It only supports the embedded resource type currently.
            </summary>
            <param name="def"></param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.LoadServiceConfiguration(Slb.ToolScope.Framework.Data.EmbeddedResourceFileType)">
            <summary>
            Load a specified Data Object (service) configuration xml file. It only supports the embedded resource type currently.
            </summary>
            <param name="def"></param>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.TaskProperties">
            <summary>
            Gets or sets the collection of Task Property
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ParentForm">
            <summary>
            Gets or sets the parent form for UI elements
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ToolContextMgr">
            <summary>
            Gets or sets the manager for determining how to access the tool
            </summary>
        </member>
        <member name="P:Slb.ToolScope.Framework.UITier.Tasks.ToolSpecificBase.ToolScopeWorkFlowTreeController">
            <summary>
            Gets or sets WorkFlowTreeController
            </summary>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsWorkStep">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of testing tool communications
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsWorkStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsWorkStep"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.TestCommunicationsWorkStep.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.MWDConnectionTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.ToolAccessTask"/> for MWD connection
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MWDConnectionTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.MWDConnectionTask"/> class.
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.MWDConnectionTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Slb.ToolScope.Framework.UITier.Tasks.LoadUDICoefficientsFromEpromTask">
            <summary>
            A <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/> of loading UDI Coefficients from Eprom.
            </summary>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LoadUDICoefficientsFromEpromTask.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Slb.ToolScope.Framework.UITier.Tasks.Tss.TssWorkStep"/>
            </summary>
            <param name="name">Task name</param>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LoadUDICoefficientsFromEpromTask.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>
                <c>true</c> if this task ends after Execute returns; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Slb.ToolScope.Framework.UITier.Tasks.LoadUDICoefficientsFromEpromTask.DisplayMessage(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Display message
            </summary>
            <param name="message">message</param>
            <param name="messageBoxIcon"></param>
        </member>
    </members>
</doc>
